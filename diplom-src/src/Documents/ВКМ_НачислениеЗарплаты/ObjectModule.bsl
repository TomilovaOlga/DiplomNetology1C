
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий



Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СформироватьДвижения();
	
	РассчитатьОклад();
	РассчитатьОтпускные();
	СформироватьДвиженияНДФЛиВзаиморасчетыССотрудниками();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПоПроценту();
	СформироватьДвиженияПоОтпуску();
	Движения.ВКМ_ОсновныеНачисления.Записать();	

КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу()

	Отбор = Новый Структура();
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &ВидРасчета
		|	И ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Показатель,
		|	ВТ_Сотрудники.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_Сотрудники.ДатаОкончания КАК ПериодДействияКонец,
		|	ВТ_Сотрудники.ВидРасчета
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТ_Сотрудники.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_Сотрудники КАК ВТ_Сотрудники)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
		|		ПО ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = ВТ_Сотрудники.Сотрудник";
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата)); //срез последних на начало меяца, за который расчитываем зп
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;

КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад
		|	И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = Движение.Показатель;
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.Факт;
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
КонецПроцедуры

Процедура СформироватьДвиженияПоПроценту()
	Отбор = Новый Структура();
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Процент);
	
	СтрокиПроцента = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиПроцента.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК Результат,
		|	ВТ_Сотрудники.ВидРасчета,
		|	ВТ_Сотрудники.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_Сотрудники.ДатаОкончания КАК ПериодДействияКонец
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТ_Сотрудники.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_Сотрудники КАК ВТ_Сотрудники)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
		|		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВТ_Сотрудники.Сотрудник";
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Процент);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДвиженияПоОтпуску()
		
	Для Каждого Строка Из Начисления Цикл
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Строка.ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1));
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры

Процедура РассчитатьОтпускные()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаОтработано,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|		И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.Факт;
		
		Если ВыборкаДетальныеЗаписи.БазаОтработано = 0 Тогда
			Движение.Результат = 0;
			Продолжить;
		КонецЕсли;
		КоличествоДнейОтпуска = (Движение.ПериодДействияКонец + (60 * 60 * 24) - Движение.ПериодДействияНачало) / (60 * 60 * 24);
		Движение.Результат =  (ВыборкаДетальныеЗаписи.БазаОсн / ВыборкаДетальныеЗаписи.БазаОтработано) * КоличествоДнейОтпуска; 
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);

КонецПроцедуры	

Процедура СформироватьДвиженияНДФЛиВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисленияДанныеГрафика.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ПериодДействияНачало = НачалоМесяца(Дата);
		ДвижениеНДФЛ.ПериодДействияКонец = КонецМесяца(Дата);
		ДвижениеНДФЛ.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Результат = ВыборкаДетальныеЗаписи.Результат * 0.13;	
		
//		взаиморасчеты с сотрудниками

		ДвижениеСотрудники = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеСотрудники.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		ДвижениеСотрудники.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеСотрудники.Период = Дата;
		ДвижениеСотрудники.Сумма = ВыборкаДетальныеЗаписи.Результат - ДвижениеНДФЛ.Результат;
		ДвижениеСотрудники.Регистратор = Ссылка;
		
	КонецЦикла;
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();	
КонецПроцедуры	

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
